version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: social-support-postgres
    environment:
      POSTGRES_DB: social_support_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - social-support-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MongoDB
  mongodb:
    image: mongo:5.0
    container_name: social-support-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb_user
      MONGO_INITDB_ROOT_PASSWORD: mongodb_password
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - social-support-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: social-support-qdrant
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "6333:6333"
      - "6334:6334"
    networks:
      - social-support-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.0
    container_name: social-support-neo4j
    environment:
      NEO4J_AUTH: neo4j/neo4j_password
      NEO4J_PLUGINS: '["graph-data-science", "apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: gds.*,apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - social-support-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "neo4j_password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Ollama LLM Server
  ollama:
    image: ollama/ollama:latest
    container_name: social-support-ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - social-support-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: social-support-redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - social-support-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Langfuse for Observability (Optional)
  langfuse:
    image: langfuse/langfuse:latest
    container_name: social-support-langfuse
    environment:
      DATABASE_URL: postgresql://postgres:postgres_password@postgres:5432/langfuse_db
      NEXTAUTH_SECRET: langfuse_secret
      NEXTAUTH_URL: http://localhost:3000
      SALT: langfuse_salt
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - social-support-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: social-support-api
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=social_support_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - MONGODB_URL=mongodb://mongodb_user:mongodb_password@mongodb:27017
      - MONGODB_DB=social_support_docs
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4j_password
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=llama2:7b-chat
      - LANGFUSE_SECRET_KEY=your_secret_key
      - LANGFUSE_PUBLIC_KEY=your_public_key
      - LANGFUSE_HOST=http://langfuse:3000
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./data/uploads:/app/data/uploads
      - ./data/temp:/app/data/temp
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - mongodb
      - qdrant
      - neo4j
      - ollama
      - redis
    networks:
      - social-support-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Streamlit Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: social-support-frontend
    environment:
      - API_BASE_URL=http://api:8000
    ports:
      - "8501:8501"
    depends_on:
      - api
    networks:
      - social-support-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: social-support-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - frontend
    networks:
      - social-support-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  mongodb_data:
  qdrant_data:
  neo4j_data:
  neo4j_logs:
  ollama_data:
  redis_data:

networks:
  social-support-network:
    driver: bridge